"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[413],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},965:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));r(8209);const a={sidebar_position:1},i="Ground rules",l={unversionedId:"contributing/ground-rules",id:"contributing/ground-rules",title:"Ground rules",description:"* For major changes, please open an issue first to discuss what you would like to change.",source:"@site/docs/contributing/ground-rules.md",sourceDirName:"contributing",slug:"/contributing/ground-rules",permalink:"/template-fastapi-react/docs/contributing/ground-rules",draft:!1,editUrl:"https://github.com/equinor/template-fastapi-react/tree/main/documentation/docs/contributing/ground-rules.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Contributing",permalink:"/template-fastapi-react/docs/contributing/"},next:{title:"Development guide",permalink:"/template-fastapi-react/docs/category/development-guide"}},s={},u=[{value:"Pull Requests",id:"pull-requests",level:2},{value:"Git commit",id:"git-commit",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ground-rules"},"Ground rules"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For major changes, please open an issue first to discuss what you would like to change. ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Search for existing issues and pull requests on the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/equinor/template-fastapi-react/projects/1"},"project development board")," before creating your own."))),(0,o.kt)("li",{parentName:"ul"},"Contributors should fork the repository and work on fixes or enhancements on their own fork.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Use the ",(0,o.kt)("a",{parentName:"li",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork"},"pull request feature")," to submit your changes to this  repository."),(0,o.kt)("li",{parentName:"ul"},"All pull requests should be rebased (with main) and commits squashed prior to the final merge process."),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("a",{parentName:"li",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"conventional commit")," formatting for commit messages, so that it's possible to auto-generate the changelogs."))),(0,o.kt)("li",{parentName:"ul"},"Use a separate branch for each issue you\u2019re working on. ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Do not combine fixes for multiple issues into one branch. "))),(0,o.kt)("li",{parentName:"ul"},"Please include unit tests with all your code changes.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"All unit tests must be 100% passing before the pull requests will be approved and merged.")))),(0,o.kt)("h2",{id:"pull-requests"},"Pull Requests"),(0,o.kt)("p",null,"Please try to make your pull request easy to review for us."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Make small pull requests. The smaller, the faster to review and the more likely it will be merged soon."),(0,o.kt)("li",{parentName:"ul"},"Don't make changes unrelated to your PR. ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Maybe there are typos on some comments, maybe refactoring would be welcome on\na function, but if that is not related to your PR, please make another PR for that.")))),(0,o.kt)("h2",{id:"git-commit"},"Git commit"),(0,o.kt)("p",null,"We have very precise rules over how our git commit messages can be formatted. "),(0,o.kt)("p",null,"We are using the ",(0,o.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"conventional commits")," formatting for commit messages."),(0,o.kt)("p",null,"Here\u2019s an example commit message:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"type: short description of what you did (imperative tense) <= 50 chars\n\nWhen necessarry, mote details can come here, until 72 chars each line.\n\nBREAKING CHANGE: some description\n\nFixes #1234\n")),(0,o.kt)("p",null," This leads to more readable messages that are easy to follow when looking through the project history."),(0,o.kt)("p",null,"It is important to note that we use the git commit messages to auto-generate changelogs for each release."))}p.isMDXComponent=!0},8209:(e,t,r)=>{r(7294)}}]);