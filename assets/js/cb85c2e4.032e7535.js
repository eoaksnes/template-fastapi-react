"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[358],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,m=d["".concat(l,".").concat(g)]||d[g]||c[g]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2819:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));n(8209);const a={sidebar_position:3},o="Testing",s={unversionedId:"contributing/development-guide/testing",id:"contributing/development-guide/testing",title:"Testing",description:"API",source:"@site/docs/contributing/development-guide/testing.md",sourceDirName:"contributing/development-guide",slug:"/contributing/development-guide/testing",permalink:"/template-fastapi-react/docs/contributing/development-guide/testing",draft:!1,editUrl:"https://github.com/equinor/template-fastapi-react/tree/main/documentation/docs/contributing/development-guide/testing.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Generate API clients",permalink:"/template-fastapi-react/docs/contributing/development-guide/coding/generate-api-clients"},next:{title:"Upgrading",permalink:"/template-fastapi-react/docs/contributing/development-guide/upgrading"}},l={},u=[{value:"API",id:"api",level:2},{value:"Unit tests",id:"unit-tests",level:3},{value:"Integration tests",id:"integration-tests",level:3},{value:"Web",id:"web",level:2},{value:"Unit tests",id:"unit-tests-1",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"testing"},"Testing"),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("p",null,"The application has two types of API tests: unit tests and integration tests."),(0,i.kt)("h3",{id:"unit-tests"},"Unit tests"),(0,i.kt)("p",null,"You will find unit tests under ",(0,i.kt)("inlineCode",{parentName:"p"},"src/tests/unit"),"."),(0,i.kt)("p",null,"Using docker:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose run --rm api pytest\n")),(0,i.kt)("p",null,"Without using docker:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pytest\n")),(0,i.kt)("p",null,"As a general rule, unit tests should not have any external dependencies - especially on the file system."),(0,i.kt)("h3",{id:"integration-tests"},"Integration tests"),(0,i.kt)("p",null,"The integrations tests can be found under ",(0,i.kt)("inlineCode",{parentName:"p"},"src/tests/integration"),"."),(0,i.kt)("p",null,"To run integration tests add ",(0,i.kt)("inlineCode",{parentName:"p"},"--integration")," as argument for pytest."),(0,i.kt)("p",null,"These tests depends on mongodb and that it's running."),(0,i.kt)("h2",{id:"web"},"Web"),(0,i.kt)("h3",{id:"unit-tests-1"},"Unit tests"),(0,i.kt)("p",null,"Without using docker:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose run --rm web yarn test\n")),(0,i.kt)("p",null,"Not using docker:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd web/\nyarn test\n")))}c.isMDXComponent=!0},8209:(e,t,n)=>{n(7294)}}]);